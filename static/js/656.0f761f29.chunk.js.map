{"version":3,"file":"static/js/656.0f761f29.chunk.js","mappings":"qPAGO,SAASA,EAAT,GAAyC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,GAAME,MAAO,CAAEC,KAAMP,GAAzC,SACGG,KAFIC,EADC,KASjB,CCZD,IAgCA,EAhCa,WACX,OAAoCI,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeY,EAAf,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACHL,IACHI,GAAY,IACZE,EAAAA,EAAAA,MACGC,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfN,GAAU,OAAIM,IACdP,GAAc,EACf,IACAS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPV,GAAY,EACb,IAEN,GAAE,CAACJ,KAGF,+BACIG,GAAYH,IACZ,iCACE,wBAAI,oBACJ,SAACX,EAAD,CAAoBC,OAAQA,QAKrC,C,oKChCDyB,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHV,EAAc,SAAAW,GACzB,OAAOF,EAAAA,EAAAA,GAAM,qBAAsB,CACjCG,OAAQ,CACNC,QAASH,EACTC,KAAAA,IAGL,EAEYG,EAAoB,SAAAzB,GAC/B,OAAOoB,EAAAA,EAAAA,GAAM,SAAD,OAAUpB,GAAM,CAC1BuB,OAAQ,CACNC,QAASH,IAGd,EAEYK,EAAoB,SAAA1B,GAC/B,OAAOoB,EAAAA,EAAAA,GAAM,SAAD,OAAUpB,EAAV,YAAwB,CAClCuB,OAAQ,CACNC,QAASH,IAGd,EAEYM,EAAoB,SAAA3B,GAC/B,OAAOoB,EAAAA,EAAAA,GAAM,SAAD,OAAUpB,EAAV,YAAwB,CAClCuB,OAAQ,CACNC,QAASH,IAGd,EAEYO,EAAoB,SAAAC,GAC/B,OAAOT,EAAAA,EAAAA,GAAM,eAAgB,CAC3BG,OAAQ,CACNC,QAASH,EACTQ,MAAOA,IAGZ,C","sources":["components/TrandingMoviesList/TrandingMoviesList.jsx","pages/Home/Home.jsx","servises/movies-api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport function TrandingMoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link to={`movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nTrandingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from 'servises/movies-api';\nimport { TrandingMoviesList } from 'components/TrandingMoviesList/TrandingMoviesList';\n\nconst Home = () => {\n  const [isListShow, setIsListShow] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    if (!isListShow) {\n      setIsLoader(true);\n      fetchMovies()\n        .then(({ data: { results } }) => {\n          setMovies([...results]);\n          setIsListShow(true);\n        })\n        .catch(error => console.log(error))\n        .finally(() => {\n          setIsLoader(false);\n        });\n    }\n  }, [isListShow]);\n\n  return (\n    <>\n      {!isLoader && isListShow && (\n        <>\n          <h2>Trending today</h2>\n          <TrandingMoviesList movies={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '80fe24ea6ea4db327f1f3c79898b7ba2';\n\nexport const fetchMovies = page => {\n  return axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieDetails = id => {\n  return axios(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = id => {\n  return axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieCredits = id => {\n  return axios(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = query => {\n  return axios('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n};\n"],"names":["TrandingMoviesList","movies","location","useLocation","map","title","id","to","state","from","useState","isListShow","setIsListShow","setMovies","isLoader","setIsLoader","useEffect","fetchMovies","then","results","data","catch","error","console","log","finally","axios","API_KEY","page","params","api_key","fetchMovieDetails","fetchMovieReviews","fetchMovieCredits","fetchSearchMovies","query"],"sourceRoot":""}