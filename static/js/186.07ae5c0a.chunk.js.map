{"version":3,"file":"static/js/186.07ae5c0a.chunk.js","mappings":"8LAgDA,UA5CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0CE,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAY,IACZE,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAWM,EAAKC,SAChBT,GAAiB,EAClB,IACAU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPV,GAAY,EACb,GACJ,GAAE,CAACR,KAGF,+BACIO,GAAYJ,IACZ,8BACGE,EAAQc,OAAS,GAChB,wBACGd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,yBACE,0BACE,yBAAG,WAASF,KAAW,KAAC,mBACxB,0BAAOC,QAHFC,EADE,OAUf,uBAAG,gDAMd,C,oKC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAc,SAAAC,GACzB,OAAOH,EAAAA,EAAAA,GAAM,qBAAsB,CACjCI,OAAQ,CACNC,QAASJ,EACTE,KAAAA,IAGL,EAEYG,EAAoB,SAAAP,GAC/B,OAAOC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,GAAM,CAC1BK,OAAQ,CACNC,QAASJ,IAGd,EAEYf,EAAoB,SAAAa,GAC/B,OAAOC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,YAAwB,CAClCK,OAAQ,CACNC,QAASJ,IAGd,EAEYM,EAAoB,SAAAR,GAC/B,OAAOC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,YAAwB,CAClCK,OAAQ,CACNC,QAASJ,IAGd,EAEYO,EAAoB,SAAAC,GAC/B,OAAOT,EAAAA,EAAAA,GAAM,eAAgB,CAC3BI,OAAQ,CACNC,QAASJ,EACTQ,MAAOA,IAGZ,C","sources":["components/Reviews/Reviews.jsx","servises/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'servises/movies-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [isReviewsShow, setIsReviewsShow] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n    fetchMovieReviews(movieId)\n      .then(({ data }) => {\n        setReviews(data.results);\n        setIsReviewsShow(true);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setIsLoader(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {!isLoader && isReviewsShow && (\n        <>\n          {reviews.length > 0 ? (\n            <ul>\n              {reviews.map(({ author, content, id }) => (\n                <li key={id}>\n                  <p>\n                    <b>Author: {author}</b> <br />\n                    <span>{content}</span>\n                  </p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>We don't have any reviews for this movie</p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '80fe24ea6ea4db327f1f3c79898b7ba2';\n\nexport const fetchMovies = page => {\n  return axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieDetails = id => {\n  return axios(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = id => {\n  return axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieCredits = id => {\n  return axios(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = query => {\n  return axios('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n};\n"],"names":["movieId","useParams","useState","isReviewsShow","setIsReviewsShow","reviews","setReviews","isLoader","setIsLoader","useEffect","fetchMovieReviews","then","data","results","catch","error","console","log","finally","length","map","author","content","id","axios","API_KEY","fetchMovies","page","params","api_key","fetchMovieDetails","fetchMovieCredits","fetchSearchMovies","query"],"sourceRoot":""}